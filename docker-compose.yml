services:
  web:
    build: ./web
    container_name: web
    restart: always
    ports:
      - "5000:5000"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      bot:
        condition: service_started
    networks:
      - default_network

  db:
    image: postgres:latest
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: db_password
      POSTGRES_DB: flask_database
    volumes:
      - db_data:/var/lib/postgresql/db_data
    networks:
      - default_network
    healthcheck:
      test: pg_isready -U myuser -d db_prod
      interval: 5s
      timeout: 3s
      retries: 3

  bot:
    build: ./bot
    container_name: bot
    restart: always
    depends_on:
      - redis
    env_file:
      - .env
    networks:
      - default_network
  
  redis:
    image: "redis:alpine"
    container_name: redis
    networks:
      - default_network


networks:
  default_network:


volumes:
  db_data:

