services:
  web:
    build: ./web
    container_name: bcab-web
    restart: always
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      bot:
        condition: service_started
    networks:
      default_network:
        aliases:
          - web

  db:
    image: postgres:latest
    container_name: bcab-db
    restart: always
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: db_password
      POSTGRES_DB: flask_database
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      default_network:
        aliases:
          - postgres
    healthcheck:
      test: pg_isready -U root -d flask_database
      interval: 5s
      timeout: 3s
      retries: 3

  bot:
    build: ./bot
    container_name: bcab-bot
    restart: always
    depends_on:
      - redis
    env_file:
      - .env
    networks:
      default_network:
        aliases:
          - bot
  
  redis:
    image: "redis:alpine"
    container_name: bcab-redis
    networks:
      - default_network

  nginx:
    image: "nginx:latest"
    container_name: bcab-nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - "8000:80"
    depends_on:
      - web
    networks:
      default_network:
        aliases:
          - redis


networks:
  default_network:


volumes:
  db_data:

